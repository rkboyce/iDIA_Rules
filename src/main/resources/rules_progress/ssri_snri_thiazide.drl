// SSRI/SNRI - Thiazide DDI Alerting Rule

package com.sample

//list any import classes here.
import function com.sample.DRLLogger.*;

import java.util.*;
import java.lang.String;
import java.sql.Timestamp;

import com.sample.model.ConceptSetItem;
import com.sample.model.RHSState;

import edu.pitt.dbmi.ohdsiv5.db.ConditionEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.DrugStrength;
import edu.pitt.dbmi.ohdsiv5.db.ExtendedDrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.Measurement;
import edu.pitt.dbmi.ohdsiv5.db.Person;


/////////// 
// declare any global variables here
/////////// 
global java.lang.String currentDateStr;
global java.sql.Timestamp currentDate;
global java.sql.Timestamp within48hours;
global java.sql.Timestamp within7days;
global java.sql.Timestamp within28days;
global java.sql.Timestamp plus1day;

/////////// 
// declare any types here
/////////// 


/////////// 
// Rules
/////////// 

/*
TODO's:
CONCEPT SETS:
  * List of thiazide diuretics?

  * "Sodium concentration" lab tests?
    * Sodium lab test LOINC codes taken from previous healthfacts analysis in the db: 2947-0, 2951-2 => lab measurement concept ID's 3000285, 3019550
    However it looks like in the available data these aren't used:
    SELECT * FROM banner_2019_inpatient.measurement m INNER JOIN banner_2019_inpatient.concept c ON c.concept_id = m.measurement_concept_id
    WHERE c.concept_name ILIKE '%sodium%';
    SELECT * FROM banner_etl.measurement m INNER JOIN banner_2019_inpatient.concept c ON c.concept_id = m.measurement_concept_id
    WHERE c.concept_name ILIKE '%sodium%';

  * "A396T variant of SLC02A1"? 

  * Sodium restricted diet? 
*/
// basic check of any SSRI/SNRI with any Thiazide at the same time
rule "SSRI+SNRI - THIAZIDE -- NO FILTER"
    when
      // First, we look for patients exposed to ACE I's or ARB's on the ingredient level
      $clinDrugConcept1 : ConceptSetItem(csName == "SSRIs and SNRIs Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId()) 
      // Second, we similarly look for exposure to a diuretic on the ingredient level
      $clinDrugConcept2 : ConceptSetItem(csName == "Thiazide/Thiazide-like Diuretics Ingredients")
      $de2 : DrugEra(PersonId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())
      // Next, we identify the specific drug exposures for both the ACE I/ARB and the diuretic
      $clinDrugConcept3 : ConceptSetItem(csName == "SSRIs and SNRIs") 
      $clinDrugConcept4 : ConceptSetItem(csName == "Thiazide/Thiazide-like Diuretics")
      $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
        && drugExposureStartDate != null && drugExposureStartDate >= currentDate && drugExposureStartDate < plus1day
        && drugConceptId == $clinDrugConcept3.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())
      $dexp2 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
        && (
          (drugExposureStartDate >= $dexp1.getDrugExposureStartDate() && drugExposureStartDate <= $dexp1.getDrugExposureEndDate())
          || (drugExposureEndDate >= $dexp1.getDrugExposureStartDate() && drugExposureEndDate <= $dexp1.getDrugExposureEndDate())
          || ($dexp1.getDrugExposureStartDate() >= drugExposureStartDate && $dexp1.getDrugExposureStartDate() <= drugExposureEndDate)
          || ($dexp1.getDrugExposureEndDate() >= drugExposureStartDate && $dexp1.getDrugExposureEndDate() <= drugExposureEndDate)
        )
        && drugConceptId != null && drugConceptId == $clinDrugConcept4.getConceptId() 
        && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept2.getConceptId())
      // This creates the patient as an object that can be used in the RHS state in the right hand side of the rule
      $person : Person(personId == $de1.getPersonId())
    then
      // This creates a new "state" for any patients who are found to be on both drugs...
      // This state can be used as an input on further rules to quickly filter to only those patients who have made it through previous rules
      RHSState rhsCur = new RHSState("basic concomitant exposure of SSRI/SNRI and a thiazide/thiazide-like diuretic", "yes", $person, $dexp1, $dexp2);
      insertLogical(rhsCur);
      // The output string reports simply that a potential interaction was identified through concurrent drug exposures and lists the drug IDs
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; SSRI/SNRI: %s; Thiazide/like Diuretics: %s;", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(), 
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tSSRI/SNRI - Thiazide interaction\tbasic concomitant exposure\t%s\t%s\t%s\t%s\t%s\t%s",
            currentDateStr,
            $person.getPersonId(),
            "false","basic concomitant",
            $person.getGenderCUI(),
            ((double) ($person.getDobDateDiffInMillis(currentDate) / (1000 * 3600 * 24)) / 365),
            $dexp1.getLogInfo(),
            $dexp2.getLogInfo()
      );
      System.out.println(s);
end

// intermediate step to find sodium concentrations < 130 mmol/L within 7 days
rule "SSRI+SNRI - THIAZIDE -- High Sodium Within 7 Days"
    when
      $rhs : RHSState(stateName == "basic concomitant exposure of SSRI/SNRI and a thiazide/thiazide-like diuretic" && state == "yes", $person : person)
      $meas1 : Measurement(personId == $person.getPersonId() 
        && (measurementConceptId == 3000285 || measurementConceptId == 3019550) // TODO need to confirm which concept(s) to use for sodium
        && valueAsNumber < 130 && (unitConceptId == 8753 || unitConceptId == 9557) // was originally just 9557 for mEq/L but this isn't used in the data. 8753 is mmol/L which should be equivalent.
        && measurementDateTime >= within7days && measurementDateTime < plus1day)
    then  
      // Create a state object for the current node in the decision tree to be used by other LHS
      RHSState rhsNN = new RHSState("ssri/snri - thiazide, sodium <130 mmol/L within 7 days yes", "yes", $rhs.getPerson(), $rhs.getDexp1(), $rhs.getDexp2());
      insertLogical(rhsNN);
      String s = String.format(
          "SSRI/SNRI - Thiazide interaction for patient %s.\n\tClinical Implication: Substantial risk of hyponatremia.\n\tMitigating factor: (TODO).\n\tRecommendation: Monitor sodium levels, and use only if benefit outweighs risk.\n\tExplanation: Sodium level: %s mmol/L;Lab date: %s;",
          $person.getPersonId(),
          $meas1.getValueAsNumber(),
          $meas1.getMeasurementDateTime()
        );
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tSSRI/SNRI - Thiazide interaction\tsodium < 130 mmol/L within 7 days\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s",
          currentDateStr,
          $person.getPersonId(),
          "true","red",
          $person.getGenderCUI(),
          ((double) ($person.getDobDateDiffInMillis(currentDate) / (1000 * 3600 * 24)) / 365),
          rhsNN.getDexp1().getLogInfo(),
          rhsNN.getDexp2().getLogInfo(),
          "MEAS - sodium = " + $meas1.getValueAsNumber() + "mmol/L",
          "MEAS TAKEN - " + $meas1.getMeasurementDateTime()
      );
      System.out.println(s);          
end
